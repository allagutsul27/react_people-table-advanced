{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","types/SexFilter.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","utils/findParent.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","utils/capitalize.tsx","api.ts","types/Sort.ts","pages/PeoplePage.tsx","utils/getPreparedPeople.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","App","HomePage","SexFilter","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","centuriesArr","PeopleFilters","sex","query","centuries","setSearchParams","toggleCenturies","century","includes","filter","item","All","male","female","type","placeholder","onChange","event","target","map","length","sort","order","Loader","findParent","people","parent","parentSelected","find","human","name","pathname","slug","PersonLink","person","filteredPeople","personLink","useParams","born","died","motherName","fatherName","headerCells","PeopleTable","cell","selectedCell","isReversed","slice","toUpperCase","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Sort","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","getPeople","catch","finally","get","getAll","peopleAll","visiblePeople","normalizedQuery","toLowerCase","trim","String","Math","ceil","person1","person2","Name","Sex","localeCompare","Born","Died","reverse","getPreparedPeople","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.06a77ecd.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  {\n    'has-background-grey-lighter': isActive,\n  });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export enum SexFilter {\n  All = '',\n  male = 'm',\n  female = 'f',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SexFilter } from '../types/SexFilter';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  sex: string,\n  query: string,\n  centuries: string[],\n};\n\nconst centuriesArr = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters: React.FC<Props> = ({\n  sex,\n  query,\n  centuries,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(searchParams,\n      { query: event.target.value || null });\n\n    setSearchParams(search);\n  };\n\n  const toggleCenturies = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter(item => item !== century)\n      : [...centuries, century];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': sex === SexFilter.All,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={cn({\n            'is-active': sex === SexFilter.male,\n          })}\n          params={{ sex: SexFilter.male }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={cn({\n            'is-active': sex === SexFilter.female,\n          })}\n          params={{ sex: SexFilter.female }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArr.map(century => (\n              <SearchLink\n                data-cy=\"century\"\n                key={century}\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{ centuries: toggleCenturies(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length > 0,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-fullwidth is-outlined\"\n          params={{\n            sex: null, query: null, centuries: null, sort: null, order: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\nexport const findParent = (\n  people: Person[],\n  parent: string | null,\n  searchParams: URLSearchParams,\n) => {\n  const parentSelected = people.find(human => human.name === parent);\n\n  if (parentSelected) {\n    return (\n      <Link\n        to={{\n          pathname: `/people/${parentSelected.slug}`,\n          search: searchParams.toString(),\n        }}\n        className={cn({\n          'has-text-danger': parentSelected.sex === 'f',\n        })}\n      >\n        {parentSelected.name}\n      </Link>\n    );\n  }\n\n  return parent || '-';\n};\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { findParent } from '../utils/findParent';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  filteredPeople: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, filteredPeople }) => {\n  const { personLink } = useParams();\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': personLink === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={{ pathname: `/people/${person.slug}`, search: searchParams.toString() }}\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{findParent(filteredPeople, person.motherName, searchParams)}</td>\n      <td>{findParent(filteredPeople, person.fatherName, searchParams)}</td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\nimport { capitalize } from '../utils/capitalize';\n\ntype Props = {\n  filteredPeople: Person[],\n  sort: string,\n  order: string,\n};\n\nconst headerCells = ['name', 'sex', 'born', 'died'];\n\nexport const PeopleTable: React.FC<Props> = ({\n  filteredPeople, sort, order,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        {headerCells.map(cell => {\n          const selectedCell = sort === cell;\n          const isReversed = order === 'desc';\n\n          return (\n            <th key={cell}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {capitalize(cell)}\n                <SearchLink\n                  params={{\n                    sort: selectedCell && isReversed\n                      ? null\n                      : cell,\n                    order: selectedCell && !isReversed\n                      ? 'desc'\n                      : null,\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('fas', {\n                      'fa-sort': !selectedCell,\n                      'fa-sort-up': selectedCell && !isReversed,\n                      'fa-sort-down': selectedCell && isReversed,\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          );\n        })}\n\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {filteredPeople.map(person => (\n        <PersonLink\n          key={person.slug}\n          person={person}\n          filteredPeople={filteredPeople}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","export const capitalize = (value: string) => {\n  return value.slice(0, 1).toUpperCase() + value.slice(1);\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum Sort {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { getPreparedPeople } from '../utils/getPreparedPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const filteredPeople = getPreparedPeople(people,\n    {\n      query, sex, sort, order, centuries,\n    });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters\n                sex={sex}\n                query={query}\n                centuries={centuries}\n              />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {!isLoading && people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && filteredPeople.length === 0 && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!error && filteredPeople.length > 0 && (\n                <PeopleTable\n                  filteredPeople={filteredPeople}\n                  sort={sort}\n                  order={order}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { Sort } from '../types/Sort';\n\ntype FilterParams = {\n  query: string,\n  sex: string,\n  sort: string,\n  order: string,\n  centuries: string[],\n};\n\nexport const getPreparedPeople = (peopleAll: Person[],\n  {\n    query, sex, sort, order, centuries,\n  }: FilterParams) => {\n  let visiblePeople = [...peopleAll];\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (query) {\n    visiblePeople = visiblePeople.filter(person => {\n      const normalizedQuery = query.toLowerCase().trim();\n      const filteredFields = (\n        person.name + person.motherName + person.fatherName\n      ).toLowerCase();\n\n      return filteredFields.includes(normalizedQuery);\n    });\n  }\n\n  if (centuries.length) {\n    visiblePeople = visiblePeople.filter(person => centuries.includes(\n      String(Math.ceil(person.born / 100)),\n    ));\n  }\n\n  if (sort) {\n    visiblePeople.sort((person1, person2) => {\n      switch (sort) {\n        case Sort.Name:\n        case Sort.Sex:\n          return person1[sort].localeCompare(person2[sort]);\n\n        case Sort.Born:\n        case Sort.Died:\n          return person1[sort] - person2[sort];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (order) {\n    visiblePeople.reverse();\n  }\n\n  return visiblePeople;\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personLink\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}